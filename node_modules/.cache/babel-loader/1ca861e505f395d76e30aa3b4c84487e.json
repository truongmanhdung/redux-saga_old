{"ast":null,"code":"import * as workTypes from \"../constansts/work\";\nconst initialState = {};\n\nconst myReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case workTypes.FETCH_WORKS:\n      {\n        return { ...state,\n          listWorks: [],\n          work\n        };\n      }\n      ;\n\n    case workTypes.FETCH_WORKS_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        return { ...state,\n          listWorks: data\n        };\n      }\n      ;\n\n    case workTypes.FETCH_WORKS_FAILED:\n      {\n        const {\n          err\n        } = action.payload;\n        return { ...state,\n          listWorks: []\n        };\n      }\n      ;\n\n    case workTypes.ADD_WORKS:\n      {\n        return { ...state\n        };\n      }\n      ;\n\n    case workTypes.ADD_WORK_SUCCESS:\n      {\n        const {\n          work\n        } = action.payload;\n        state.listWorks.push(work);\n        return { ...state,\n          listWorks: state.listWorks\n        };\n      }\n      ;\n\n    case workTypes.EDIT_WORKS:\n      {\n        const {\n          work\n        } = action.payload;\n        return { ...state,\n          workEditing: work\n        };\n      }\n      ;\n\n    case workTypes.EDIT_WORKS_SUCCESS:\n      {\n        const {\n          work\n        } = action.payload;\n        state.listWorks.put(work);\n        return { ...state,\n          listWorks: state.listWorks\n        };\n      }\n      ;\n    // case workTypes.FILTER_WORKS: {\n    //     return ;\n    // };\n\n    case workTypes.FILTER_WORKS_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        return { ...state,\n          listWorks: data\n        };\n      }\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default myReducers;","map":{"version":3,"sources":["/home/thienncb/Desktop/redux-saga/src/reducers/works.js"],"names":["workTypes","initialState","myReducers","state","action","type","FETCH_WORKS","listWorks","work","FETCH_WORKS_SUCCESS","data","payload","FETCH_WORKS_FAILED","err","ADD_WORKS","ADD_WORK_SUCCESS","push","EDIT_WORKS","workEditing","EDIT_WORKS_SUCCESS","put","FILTER_WORKS_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,oBAA3B;AACA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,SAAS,CAACM,WAAf;AAA4B;AACxB,eAAO,EACH,GAAGH,KADA;AAEHI,UAAAA,SAAS,EAAE,EAFR;AAGHC,UAAAA;AAHG,SAAP;AAKH;AAAA;;AACD,SAAKR,SAAS,CAACS,mBAAf;AAAoC;AAChC,cAAM;AAAEC,UAAAA;AAAF,YAAWN,MAAM,CAACO,OAAxB;AACA,eAAO,EACH,GAAGR,KADA;AAEHI,UAAAA,SAAS,EAAEG;AAFR,SAAP;AAIH;AAAA;;AACD,SAAKV,SAAS,CAACY,kBAAf;AAAmC;AAC/B,cAAM;AAAEC,UAAAA;AAAF,YAAUT,MAAM,CAACO,OAAvB;AACA,eAAO,EACH,GAAGR,KADA;AAEHI,UAAAA,SAAS,EAAE;AAFR,SAAP;AAIH;AAAA;;AACD,SAAKP,SAAS,CAACc,SAAf;AAA0B;AACtB,eAAO,EACH,GAAGX;AADA,SAAP;AAGH;AAAA;;AACD,SAAKH,SAAS,CAACe,gBAAf;AAAiC;AAC7B,cAAM;AAAEP,UAAAA;AAAF,YAAWJ,MAAM,CAACO,OAAxB;AACAR,QAAAA,KAAK,CAACI,SAAN,CAAgBS,IAAhB,CAAqBR,IAArB;AACA,eAAO,EACH,GAAGL,KADA;AAEHI,UAAAA,SAAS,EAAEJ,KAAK,CAACI;AAFd,SAAP;AAIH;AAAA;;AACD,SAAKP,SAAS,CAACiB,UAAf;AAA2B;AACvB,cAAM;AAACT,UAAAA;AAAD,YAASJ,MAAM,CAACO,OAAtB;AACA,eAAO,EAEH,GAAGR,KAFA;AAGHe,UAAAA,WAAW,EAAEV;AAHV,SAAP;AAKH;AAAA;;AACD,SAAKR,SAAS,CAACmB,kBAAf;AAAmC;AAC/B,cAAM;AAAEX,UAAAA;AAAF,YAAWJ,MAAM,CAACO,OAAxB;AACAR,QAAAA,KAAK,CAACI,SAAN,CAAgBa,GAAhB,CAAoBZ,IAApB;AACA,eAAO,EACH,GAAGL,KADA;AAEHI,UAAAA,SAAS,EAAEJ,KAAK,CAACI;AAFd,SAAP;AAIH;AAAA;AACD;AACA;AACA;;AAEA,SAAKP,SAAS,CAACqB,oBAAf;AAAqC;AACjC,cAAM;AAAEX,UAAAA;AAAF,YAAWN,MAAM,CAACO,OAAxB;AACA,eAAO,EACH,GAAGR,KADA;AAEHI,UAAAA,SAAS,EAAEG;AAFR,SAAP;AAIH;;AACD;AACI,aAAOP,KAAP;AA/DR;;AAgEC;AACJ,CAlED;;AAoEA,eAAeD,UAAf","sourcesContent":["import * as workTypes from \"../constansts/work\";\nconst initialState = {};\n\nconst myReducers = (state = initialState, action) => {\n    switch (action.type) {\n        case workTypes.FETCH_WORKS: {\n            return {\n                ...state,\n                listWorks: [],\n                work\n            };\n        };\n        case workTypes.FETCH_WORKS_SUCCESS: {\n            const { data } = action.payload;\n            return {\n                ...state,\n                listWorks: data,\n            };\n        };\n        case workTypes.FETCH_WORKS_FAILED: {\n            const { err } = action.payload;\n            return {\n                ...state,\n                listWorks: [],\n            };\n        };\n        case workTypes.ADD_WORKS: {\n            return {\n                ...state,\n            };\n        };\n        case workTypes.ADD_WORK_SUCCESS: {\n            const { work } = action.payload;\n            state.listWorks.push(work);\n            return {\n                ...state,\n                listWorks: state.listWorks,\n            };\n        };\n        case workTypes.EDIT_WORKS: {\n            const {work} = action.payload;\n            return {\n                \n                ...state,\n                workEditing: work\n            };\n        };\n        case workTypes.EDIT_WORKS_SUCCESS: {\n            const { work } = action.payload;\n            state.listWorks.put(work);\n            return {\n                ...state,\n                listWorks: state.listWorks,\n            };\n        };\n        // case workTypes.FILTER_WORKS: {\n        //     return ;\n        // };\n\n        case workTypes.FILTER_WORKS_SUCCESS: {\n            const { data } = action.payload;\n            return {\n                ...state,\n                listWorks: data,\n            }\n        }\n        default:\n            return state;\n    };\n};\n\nexport default myReducers;\n"]},"metadata":{},"sourceType":"module"}