{"ast":null,"code":"import { fork, take, call, put } from \"redux-saga/effects\";\nimport * as workTypes from \"../constansts/work\";\nimport { getList } from '../apis/work';\nimport { InvertColorsOff } from \"@material-ui/icons\";\n\nfunction* watchFetchListWorkAction() {\n  yield take(workTypes.FETCH_WORKS);\n  const res = yield call(getList);\n  const {\n    status,\n    data\n  } = res;\n  InvertColorsOff();\n}\n\nfunction* watchCreteWorkAction() {\n  console.log('watchCreteWorkAction');\n}\n\nfunction* rootSaga() {\n  yield fork(watchFetchListWorkAction);\n  yield fork(watchCreteWorkAction);\n  yield true;\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["/home/thienncb/Desktop/redux-saga/src/sagas/index.js"],"names":["fork","take","call","put","workTypes","getList","InvertColorsOff","watchFetchListWorkAction","FETCH_WORKS","res","status","data","watchCreteWorkAction","console","log","rootSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,IAAf,EAAoBC,IAApB,EAAyBC,GAAzB,QAAsC,oBAAtC;AACA,OAAO,KAAKC,SAAZ,MAA2B,oBAA3B;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,SAASC,eAAT,QAAgC,oBAAhC;;AAEA,UAAUC,wBAAV,GAAqC;AACjC,QAAMN,IAAI,CAACG,SAAS,CAACI,WAAX,CAAV;AACA,QAAMC,GAAG,GAAG,MAAMP,IAAI,CAACG,OAAD,CAAtB;AACA,QAAM;AAACK,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAiBF,GAAvB;AACAH,EAAAA,eAAe;AACjB;;AACD,UAAUM,oBAAV,GAAiC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACF;;AACF,UAAUC,QAAV,GAAoB;AAChB,QAAMf,IAAI,CAACO,wBAAD,CAAV;AACA,QAAMP,IAAI,CAACY,oBAAD,CAAV;AACA,QAAM,IAAN;AACH;;AAGD,eAAeG,QAAf","sourcesContent":["import { fork, take,call,put   } from \"redux-saga/effects\";\nimport * as workTypes from \"../constansts/work\";\nimport {getList} from '../apis/work';\nimport { InvertColorsOff } from \"@material-ui/icons\";\n\nfunction* watchFetchListWorkAction() {\n    yield take(workTypes.FETCH_WORKS);\n    const res = yield call(getList);\n    const {status, data} = res;\n    InvertColorsOff()\n }\n function* watchCreteWorkAction() {\n    console.log('watchCreteWorkAction');\n }\nfunction* rootSaga(){\n    yield fork(watchFetchListWorkAction);\n    yield fork(watchCreteWorkAction);\n    yield true;\n}\n\n\nexport default rootSaga;\n"]},"metadata":{},"sourceType":"module"}