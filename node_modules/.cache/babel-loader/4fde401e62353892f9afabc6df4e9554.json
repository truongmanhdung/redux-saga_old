{"ast":null,"code":"import createSagaMiddleware from \"@redux-saga/core\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport myReducer from \"../reducers/index\";\nimport rootSaga from \"../sagas/index\";\nconst composeEnhancers = process.env.NODE_ENV !== \"production\" && typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  shouldHotReload: false\n}) : compose;\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = () => {\n  const middleware = [thunk, sagaMiddleware];\n  const enhancers = [applyMiddleware(...middleware)];\n  const store = createStore(myReducer, composeEnhancers(...enhancers));\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/home/thienncb/Desktop/redux-saga/src/redux/configureStore.js"],"names":["createSagaMiddleware","applyMiddleware","compose","createStore","thunk","myReducer","rootSaga","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","shouldHotReload","sagaMiddleware","configureStore","middleware","enhancers","store","run"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,kBAAjC;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,MAAMC,gBAAgB,GAClBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IACA,OAAOC,MAAP,KAAkB,QADlB,IAEAA,MAAM,CAACC,oCAFP,GAGMD,MAAM,CAACC,oCAAP,CAA4C;AACxCC,EAAAA,eAAe,EAAE;AADuB,CAA5C,CAHN,GAMMX,OAPV;AAQA,MAAMY,cAAc,GAAGd,oBAAoB,EAA3C;;AAEA,MAAMe,cAAc,GAAG,MAAM;AACzB,QAAMC,UAAU,GAAG,CAACZ,KAAD,EAAQU,cAAR,CAAnB;AACA,QAAMG,SAAS,GAAG,CAAChB,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CAAlB;AACA,QAAME,KAAK,GAAGf,WAAW,CAACE,SAAD,EAAYE,gBAAgB,CAAC,GAAGU,SAAJ,CAA5B,CAAzB;AACAH,EAAAA,cAAc,CAACK,GAAf,CAAmBb,QAAnB;AACA,SAAOY,KAAP;AACH,CAND;;AAQA,eAAeH,cAAf","sourcesContent":["import createSagaMiddleware from \"@redux-saga/core\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport myReducer from \"../reducers/index\";\nimport rootSaga from \"../sagas/index\";\nconst composeEnhancers =\n    process.env.NODE_ENV !== \"production\" &&\n    typeof window === \"object\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n              shouldHotReload: false,\n          })\n        : compose;\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = () => {\n    const middleware = [thunk, sagaMiddleware];\n    const enhancers = [applyMiddleware(...middleware)];\n    const store = createStore(myReducer, composeEnhancers(...enhancers));\n    sagaMiddleware.run(rootSaga);\n    return store;\n};\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}