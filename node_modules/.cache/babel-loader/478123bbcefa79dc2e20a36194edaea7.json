{"ast":null,"code":"import * as workTypes from \"../constansts/work\";\nconst initialState = {};\n\nconst myReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case workTypes.FETCH_WORKS:\n      {\n        return { ...state,\n          listWorks: []\n        };\n      }\n      ;\n\n    case workTypes.FETCH_WORKS_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        return { ...state,\n          listWorks: data\n        };\n      }\n      ;\n\n    case workTypes.FETCH_WORKS_FAILED:\n      {\n        const {\n          err\n        } = action.payload;\n        toastError(err);\n        return { ...state,\n          listWorks: []\n        };\n      }\n      ;\n\n    case workTypes.ADD_WORKS:\n      {\n        const {\n          data\n        } = action.payload;\n        state.push(data);\n        return {\n          state\n        };\n      }\n      ;\n\n    case workTypes.FILTER_WORKS:\n      {}\n      ;\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default myReducers;","map":{"version":3,"sources":["/home/thienncb/Desktop/redux-saga/src/reducers/works.js"],"names":["workTypes","initialState","myReducers","state","action","type","FETCH_WORKS","listWorks","FETCH_WORKS_SUCCESS","data","payload","FETCH_WORKS_FAILED","err","toastError","ADD_WORKS","push","FILTER_WORKS"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,oBAA3B;AACA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAiC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,SAAS,CAACM,WAAf;AAA4B;AACxB,eAAM,EACF,GAAGH,KADD;AAEFI,UAAAA,SAAS,EAAE;AAFT,SAAN;AAIH;AAAA;;AACD,SAAKP,SAAS,CAACQ,mBAAf;AAAoC;AAChC,cAAM;AAACC,UAAAA;AAAD,YAASL,MAAM,CAACM,OAAtB;AACA,eAAO,EACH,GAAGP,KADA;AAEHI,UAAAA,SAAS,EAAEE;AAFR,SAAP;AAIH;AAAA;;AACD,SAAKT,SAAS,CAACW,kBAAf;AAAmC;AAC/B,cAAM;AAACC,UAAAA;AAAD,YAAQR,MAAM,CAACM,OAArB;AACAG,QAAAA,UAAU,CAACD,GAAD,CAAV;AACA,eAAO,EACH,GAAGT,KADA;AAEHI,UAAAA,SAAS,EAAE;AAFR,SAAP;AAIH;AAAA;;AACD,SAAKP,SAAS,CAACc,SAAf;AAA0B;AACtB,cAAM;AAACL,UAAAA;AAAD,YAASL,MAAM,CAACM,OAAtB;AACAP,QAAAA,KAAK,CAACY,IAAN,CAAWN,IAAX;AACA,eAAO;AACHN,UAAAA;AADG,SAAP;AAGH;AAAA;;AACD,SAAKH,SAAS,CAACgB,YAAf;AAA6B,OAE5B;AAAA;;AAED;AACI,aAAOb,KAAP;AAlCR;;AAmCC;AACJ,CArCD;;AAuCA,eAAeD,UAAf","sourcesContent":["import * as workTypes from \"../constansts/work\";\nconst initialState = {};\n\nconst myReducers = (state = initialState, action) =>{\n    switch (action.type){\n        case workTypes.FETCH_WORKS: {\n            return{\n                ...state,\n                listWorks: [],\n            };\n        };\n        case workTypes.FETCH_WORKS_SUCCESS: {\n            const {data} = action.payload;\n            return {\n                ...state,\n                listWorks: data,\n            };\n        };\n        case workTypes.FETCH_WORKS_FAILED: {\n            const {err} = action.payload;\n            toastError(err);\n            return {\n                ...state,\n                listWorks: [],\n            };\n        };\n        case workTypes.ADD_WORKS: {\n            const {data} = action.payload;\n            state.push(data);\n            return {\n                state\n            }\n        };\n        case workTypes.FILTER_WORKS: {\n\n        };\n\n        default:\n            return state;\n    };\n};\n\nexport default myReducers;\n"]},"metadata":{},"sourceType":"module"}