{"ast":null,"code":"var _jsxFileName = \"/home/thienncb/Desktop/redux-saga/src/components/workform/index.js\";\nimport { withStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionWorks from '../../actions/work';\nimport styles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass workForms extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      const target = e.target;\n      const name = target.name;\n      const value = target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSave = e => {\n      const {\n        workEditing\n      } = this.props;\n      e.preventDefault();\n\n      if (workEditing && workEditing.id) {\n        this.props.onUpdateWork(this.state);\n      } else {\n        this.props.onAddWork(this.state);\n      }\n    };\n\n    this.state = {\n      id: '',\n      name_work: '',\n      userId: 1,\n      time: '',\n      description: '',\n      status: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.workEditing && this.props.workEditing.id !== null) {\n      this.setState({\n        id: this.props.workEditing.id,\n        name_work: this.props.workEditing.name_work,\n        userId: this.props.workEditing.userId,\n        time: this.props.workEditing.time,\n        description: this.props.workEditing.description,\n        status: this.props.workEditing.status\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps && nextProps.workEditing) {\n      this.setState({\n        id: nextProps.workEditing.id,\n        name_work: nextProps.workEditing.name_work,\n        userId: nextProps.workEditing.userId,\n        time: nextProps.workEditing.time,\n        description: nextProps.workEditing.description,\n        status: nextProps.workEditing.status\n      });\n    }\n  }\n\n  renderStatus() {\n    let html = null;\n    const {\n      workEditing,\n      classes\n    } = this.props;\n\n    if (workEditing && workEditing.id) {\n      html = /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        style: {\n          width: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"Tr\\u1EA1ng th\\xE1i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          onChange: this.onChange,\n          name: \"status\",\n          value: this.state.status,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: true,\n            children: \"Ho\\xE0n th\\xE0nh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: false,\n            children: \"Ch\\u01B0a ho\\xE0n th\\xE0nh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this);\n    }\n\n    return html;\n  }\n\n  render() {\n    const {\n      name_work,\n      time,\n      description\n    } = this.state;\n    const {\n      open,\n      handleClose,\n      title,\n      workEditing\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSave,\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              autoFocus: true,\n              margin: \"dense\",\n              id: \"name\",\n              label: \"Name\",\n              type: \"fullname\",\n              required: true,\n              fullWidth: true,\n              name: \"name_work\",\n              value: name_work,\n              onChange: this.onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"dense\",\n              id: \"name1\",\n              label: \"Description\",\n              type: \"text\",\n              required: true,\n              fullWidth: true,\n              name: \"description\",\n              value: description,\n              onChange: this.onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"dense\",\n              id: \"name2\",\n              label: \"Time\",\n              required: true,\n              type: \"number\",\n              fullWidth: true,\n              name: \"time\",\n              value: time,\n              onChange: this.onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), this.renderStatus()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              color: \"primary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              children: workEditing ? \"sửa công việc\" : \"thêm công việc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    workEditing: state.works.workEditing\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddWork: work => dispatch(actionWorks.addWorks(work)),\n    onUpdateWork: work => dispatch(actionWorks.updateWorks(work))\n  };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(workForms));","map":{"version":3,"sources":["/home/thienncb/Desktop/redux-saga/src/components/workform/index.js"],"names":["withStyles","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","InputLabel","MenuItem","Select","TextField","React","Component","connect","actionWorks","styles","workForms","constructor","props","onChange","e","target","name","value","setState","onSave","workEditing","preventDefault","id","onUpdateWork","state","onAddWork","name_work","userId","time","description","status","componentDidMount","componentWillReceiveProps","nextProps","renderStatus","html","classes","formControl","width","render","open","handleClose","title","mapStateToProps","works","mapDispatchToProps","dispatch","work","addWorks","updateWorks"],"mappings":"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","sourcesContent":["import { withStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionWorks from '../../actions/work';\nimport styles from \"./styles\";\n\nclass workForms extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            name_work: '',\n            userId: 1,\n            time: '',\n            description: '',\n            status: false\n        };\n    };\n       \n      componentDidMount() {\n        if(this.props.workEditing && this.props.workEditing.id!==null){\n            this.setState({\n                id: this.props.workEditing.id,\n                name_work: this.props.workEditing.name_work,\n                userId: this.props.workEditing.userId,\n                time: this.props.workEditing.time,\n                description: this.props.workEditing.description,\n                status: this.props.workEditing.status,\n            });\n        }\n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps && nextProps.workEditing){  \n          this.setState({\n            id: nextProps.workEditing.id,\n            name_work: nextProps.workEditing.name_work,\n            userId: nextProps.workEditing.userId,\n            time: nextProps.workEditing.time,\n            description: nextProps.workEditing.description,\n            status: nextProps.workEditing.status,\n          });\n        }\n      }\n\n    onChange = (e) => {\n        const target = e.target;\n        const name = target.name;\n        const value = target.value;\n        this.setState({\n            [name]: value,\n        });\n    }\n\n    onSave = (e) => {\n        const {workEditing} = this.props;\n        e.preventDefault();\n        if(workEditing && workEditing.id){\n            this.props.onUpdateWork(this.state);\n        }else{\n            this.props.onAddWork(this.state);\n        }\n    }\n    renderStatus(){\n        let html = null;\n        const {workEditing, classes} = this.props;\n        if(workEditing && workEditing.id){\n            html = (<FormControl className={classes.formControl} style={{width: '200px'}}>\n                        <InputLabel  id=\"demo-simple-select-label\">Trạng thái</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            onChange={this.onChange} name=\"status\"\n                            value={this.state.status}\n                        >\n                        <MenuItem value={true}>Hoàn thành</MenuItem>\n                        <MenuItem value={false}>Chưa hoàn thành</MenuItem>\n                        </Select>\n                    </FormControl>);\n        }\n        return html;\n        \n    };\n    render() {\n        const {name_work,time,description } = this.state;\n      \n        const { open, handleClose, title ,workEditing} = this.props;\n       \n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        {title}\n                    </DialogTitle>\n                    <form onSubmit={this.onSave}>\n                        <DialogContent >\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"Name\"\n                                type=\"fullname\"\n                                required\n                                fullWidth\n                                name=\"name_work\"\n                                value={name_work}\n                                onChange={this.onChange}\n                            />\n                            <TextField\n                                margin=\"dense\"\n                                id=\"name1\"\n                                label=\"Description\"\n                                type=\"text\"\n                                required\n                                fullWidth\n                                name=\"description\"\n                                value={description}\n                                onChange={this.onChange}\n                            />\n                            <TextField\n                                margin=\"dense\"\n                                id=\"name2\"\n                                label=\"Time\"\n                                required\n                                type=\"number\"\n                                fullWidth\n                                name=\"time\"\n                                value={time}\n                                onChange={this.onChange}\n                            />\n                            \n                            {this.renderStatus()}\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button type=\"submit\" color=\"primary\">\n                                {workEditing?\"sửa công việc\" : \"thêm công việc\"}\n                            </Button>\n                        </DialogActions>\n                    </form>\n                </Dialog>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        workEditing: state.works.workEditing\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddWork: (work) => dispatch(actionWorks.addWorks(work)),\n        onUpdateWork : (work) => dispatch(actionWorks.updateWorks(work))\n    };\n};\nexport default withStyles(styles)(\n    connect(mapStateToProps, mapDispatchToProps)(workForms))"]},"metadata":{},"sourceType":"module"}