{"ast":null,"code":"import { fork, take, call, put, delay, takeLatest, select, takeEvery } from \"redux-saga/effects\";\nimport * as workTypes from \"../constansts/work\";\nimport * as userTypes from \"../constansts/user\";\nimport { getList, addWork, updateWork, deleteWork, updateStatus } from '../apis/work';\nimport { showLoading, hideLoading } from '../actions/loading';\n;\nimport { fetchWorksSuccess, fetchWorksFailed, addWorkSuccess, updateWorkSuccess, deleteWorkSuccess, updateStatusSuccess } from '../actions/work';\nimport { toast } from 'react-toastify';\nimport { signupSuccess, loginSuccess } from '../actions/user';\nimport { hideModal } from \"../actions/modal\";\nimport * as workApis from '../apis/work';\nimport { getUser, addUser } from '../apis/user';\n\nfunction* watchFetchListWorkAction() {\n  yield take(workTypes.FETCH_WORKS);\n  yield put(showLoading());\n  const userList = localStorage.getItem(\"user\");\n  const user = userList.pa;\n  const res = yield call(getList);\n  const {\n    status,\n    data\n  } = res;\n\n  if (status === 200) {\n    yield put(fetchWorksSuccess(data));\n    yield toast.success(\"Lấy dữ liệu thành công\");\n  } else {\n    yield put(fetchWorksFailed(err));\n    yield toast.error(\"lấy dữ liệu thất bại\");\n  }\n\n  yield delay(1000);\n  yield put(hideLoading());\n}\n\nfunction* filterWorkSaga({\n  payload\n}) {\n  const {\n    keyword\n  } = payload;\n  delay(500);\n  const listWorks = yield workApis.getList().then(res => {\n    const {\n      data\n    } = res;\n    return data;\n  });\n  const filterWorks = listWorks.filter(work => work.name_work.trim().toLowerCase().includes(keyword.trim().toLowerCase()));\n  console.log(filterWorks);\n  yield put(fetchWorksSuccess(filterWorks));\n}\n\nfunction* addWorkSaga({\n  payload\n}) {\n  const {\n    name_work,\n    description,\n    time,\n    userId,\n    status\n  } = payload.work;\n  yield put(showLoading());\n  const resp = yield call(addWork, {\n    name_work,\n    description,\n    time,\n    userId,\n    status\n  });\n  const {\n    data\n  } = resp;\n\n  if (resp.status === 201) {\n    yield put(addWorkSuccess(data));\n    yield toast.success(\"Thêm thành công\");\n  }\n\n  yield put(hideModal());\n  delay(500);\n  yield put(hideLoading());\n}\n\nfunction* updateWorkSaga({\n  payload\n}) {\n  const {\n    name_work,\n    description,\n    time,\n    userId,\n    status\n  } = payload.work;\n  const workEditing = yield select(state => state.works.workEditing);\n  yield put(showLoading());\n  const resp = yield call(updateWork, {\n    name_work,\n    description,\n    time,\n    userId,\n    status\n  }, workEditing.id);\n  const {\n    data\n  } = resp;\n\n  if (resp.status === 200) {\n    yield put(updateWorkSuccess(data));\n    yield toast.success(\"Sửa thành công\");\n  }\n\n  yield put(hideModal());\n  delay(500);\n  yield put(hideLoading());\n}\n\nfunction* deleteWorkSaga({\n  payload\n}) {\n  const {\n    id\n  } = payload;\n  yield put(showLoading());\n  const res = yield call(deleteWork, id);\n  const {\n    data\n  } = res;\n  yield put(deleteWorkSuccess(data));\n  delay(500);\n  yield put(hideLoading());\n  yield toast.success(\"Xóa thành công\");\n}\n\nfunction* updateStatusSaga({\n  payload\n}) {\n  const {\n    id,\n    status\n  } = payload;\n  yield put(showLoading());\n  const resp = yield call(updateStatus, {\n    status: !status\n  }, id);\n  const {\n    data\n  } = resp;\n\n  if (resp.status === 200) {\n    yield put(updateStatusSuccess(data));\n    yield toast.success(\"Cập nhật trạng thái thành công\");\n  }\n\n  yield put(hideModal());\n  delay(500);\n  yield put(hideLoading());\n}\n\nfunction* signupSaga({\n  payload\n}) {\n  const {\n    user\n  } = payload;\n  const {\n    name,\n    email,\n    password\n  } = user;\n  yield put(showLoading());\n  const resp = yield call(addUser, {\n    name,\n    email,\n    password\n  });\n  const {\n    data\n  } = resp;\n\n  if (resp.status === 201) {\n    yield put(signupSuccess(data));\n    yield toast.success(\"Đăng nhập thành công\");\n    localStorage.setItem('user', JSON.stringify(data));\n  }\n\n  delay(500);\n  yield put(hideLoading());\n}\n\nfunction* loginSaga({\n  payload\n}) {\n  const {\n    user\n  } = payload;\n  const {\n    email,\n    password\n  } = user;\n  yield put(showLoading());\n  const resp = yield call(getUser);\n  var {\n    data\n  } = resp;\n  const userDung = data.map(userSever => {\n    if (userSever.email === email && userSever.password === password) {\n      return userSever.id;\n      localStorage.setItem('user', JSON.stringify(userSever));\n    }\n  });\n  var id = userDung.join('');\n  yield put(loginSuccess(user));\n  const res = yield call(getList, id);\n  var {\n    status,\n    data\n  } = res;\n\n  if (status === 200) {\n    yield put(fetchWorksSuccess(data));\n    yield toast.success(\"Lấy dữ liệu thành công\");\n  } else {\n    yield put(fetchWorksFailed(err));\n    yield toast.error(\"lấy dữ liệu thất bại\");\n  }\n\n  delay(500);\n  yield put(hideLoading());\n}\n\nfunction* rootSaga() {\n  yield takeLatest(userTypes.SIGNUP, signupSaga);\n  yield takeLatest(userTypes.LOGIN, loginSaga);\n  const user = localStorage.getItem(\"user\");\n\n  if (user) {\n    yield fork(watchFetchListWorkAction);\n  }\n\n  yield takeLatest(workTypes.FILTER_WORKS, filterWorkSaga);\n  yield takeLatest(workTypes.ADD_WORKS, addWorkSaga);\n  yield takeLatest(workTypes.UPDATE_WORKS, updateWorkSaga);\n  yield takeLatest(workTypes.DELETE_WORKS, deleteWorkSaga);\n  yield takeLatest(workTypes.UPDATE_STATUS, updateStatusSaga);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["/home/thienncb/Desktop/redux-saga/src/sagas/index.js"],"names":["fork","take","call","put","delay","takeLatest","select","takeEvery","workTypes","userTypes","getList","addWork","updateWork","deleteWork","updateStatus","showLoading","hideLoading","fetchWorksSuccess","fetchWorksFailed","addWorkSuccess","updateWorkSuccess","deleteWorkSuccess","updateStatusSuccess","toast","signupSuccess","loginSuccess","hideModal","workApis","getUser","addUser","watchFetchListWorkAction","FETCH_WORKS","userList","localStorage","getItem","user","pa","res","status","data","success","err","error","filterWorkSaga","payload","keyword","listWorks","then","filterWorks","filter","work","name_work","trim","toLowerCase","includes","console","log","addWorkSaga","description","time","userId","resp","updateWorkSaga","workEditing","state","works","id","deleteWorkSaga","updateStatusSaga","signupSaga","name","email","password","setItem","JSON","stringify","loginSaga","userDung","map","userSever","join","rootSaga","SIGNUP","LOGIN","FILTER_WORKS","ADD_WORKS","UPDATE_WORKS","DELETE_WORKS","UPDATE_STATUS"],"mappings":"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","sourcesContent":["import { fork, take,call,put,delay, takeLatest, select, takeEvery} from \"redux-saga/effects\";\nimport * as workTypes from \"../constansts/work\";\nimport * as userTypes from \"../constansts/user\";\nimport {getList,addWork,updateWork,deleteWork,updateStatus} from '../apis/work';\nimport {showLoading , hideLoading} from '../actions/loading';;\nimport {fetchWorksSuccess, fetchWorksFailed, addWorkSuccess, updateWorkSuccess, deleteWorkSuccess,updateStatusSuccess} from '../actions/work';\nimport { toast } from 'react-toastify';\nimport {signupSuccess,loginSuccess} from '../actions/user';\nimport { hideModal } from \"../actions/modal\";\nimport * as workApis from '../apis/work';\nimport {getUser,addUser} from '../apis/user';\nfunction* watchFetchListWorkAction() {\n    yield take(workTypes.FETCH_WORKS);\n    yield put(showLoading());\n    const userList = localStorage.getItem(\"user\");\n    const user = userList.pa\n    const res = yield call(getList);\n    const {status, data} = res;\n    if(status === 200){\n        yield put(fetchWorksSuccess(data));\n        yield toast.success(\"Lấy dữ liệu thành công\");\n    }else{\n        yield put(fetchWorksFailed(err));\n        yield toast.error(\"lấy dữ liệu thất bại\");\n    }\n    yield delay(1000);\n    yield put(hideLoading());\n }\n function* filterWorkSaga({payload}){\n     const {keyword} = payload;\n     delay(500);\n     const listWorks = yield workApis.getList().then(res => {\n        const {data} = res;\n        return data;\n    });\n     const filterWorks = listWorks.filter(\n        work => work.name_work\n        .trim()\n        .toLowerCase()\n        .includes(keyword.trim().toLowerCase())\n\n     );\n    console.log(filterWorks);\n     yield put(fetchWorksSuccess(filterWorks));\n }\n function* addWorkSaga ({payload}){\n    const {name_work,description, time, userId,status} = payload.work;\n    yield put(showLoading());\n    const resp = yield call(addWork,{\n        name_work,\n        description,\n        time,\n        userId,\n        status\n    });\n    const {data} = resp;\n    if(resp.status === 201){\n        yield put(addWorkSuccess(data));\n        yield toast.success(\"Thêm thành công\");\n    }\n    yield put(hideModal());\n    delay(500);\n    yield put(hideLoading());\n\n }\n\n function* updateWorkSaga({payload}){\n    const {name_work,description, time, userId,status} = payload.work;\n    const workEditing = yield select(state=>state.works.workEditing);\n    yield put(showLoading());\n    const resp = yield call(updateWork,{\n        name_work,\n        description,\n        time,\n        userId,\n        status\n    },workEditing.id);\n    const {data} = resp;\n    if(resp.status === 200){\n        yield put(updateWorkSuccess(data));\n        yield toast.success(\"Sửa thành công\");\n    }\n    yield put(hideModal());\n    delay(500);\n    yield put(hideLoading());\n }\n\n function* deleteWorkSaga({payload}){\n    const {id} = payload;\n    yield put(showLoading());\n    const res = yield call(deleteWork,id);\n    const {data} = res;\n    yield put(deleteWorkSuccess(data));\n    delay(500);\n    yield put(hideLoading());\n    yield toast.success(\"Xóa thành công\");\n }\n function* updateStatusSaga({payload}){\n    const {id,status} = payload;\n    yield put(showLoading());\n    \n    const resp = yield call(updateStatus,{\n        status: !status\n    },id);\n    const {data} = resp;\n    if(resp.status === 200){\n        yield put(updateStatusSuccess(data));\n        yield toast.success(\"Cập nhật trạng thái thành công\");\n    }\n    yield put(hideModal());\n    delay(500);\n    yield put(hideLoading());\n }\n\n function* signupSaga({payload}){\n    const {user} = payload;\n    const {name,email,password} = user;\n    yield put(showLoading());\n    const resp = yield call(addUser,{\n        name,\n        email,\n        password\n    });\n    const {data} = resp;\n    if(resp.status === 201){\n        yield put(signupSuccess(data));\n        yield toast.success(\"Đăng nhập thành công\");\n        localStorage.setItem('user',JSON.stringify(data));\n    }\n    delay(500);\n    yield put(hideLoading());\n }\n\n function* loginSaga({payload}){\n    const {user} = payload;\n    const {email,password} = user;\n    yield put(showLoading());\n    const resp = yield call(getUser);\n    var {data} = resp;\n    const userDung =  data.map(userSever=>{\n        if(userSever.email === email && userSever.password === password){\n            return userSever.id;\n            localStorage.setItem('user',JSON.stringify(userSever));\n        }\n    });\n    var id = userDung.join('');\n    yield put(loginSuccess(user));\n    const res = yield call(getList,id);\n    var {status, data} = res;\n    if(status === 200){\n        yield put(fetchWorksSuccess(data));\n        yield toast.success(\"Lấy dữ liệu thành công\");\n    }else{\n        yield put(fetchWorksFailed(err));\n        yield toast.error(\"lấy dữ liệu thất bại\");\n    }\n    delay(500);\n    yield put(hideLoading());\n }\n\n\nfunction* rootSaga(){\n    yield takeLatest(userTypes.SIGNUP,signupSaga);\n    yield takeLatest(userTypes.LOGIN,loginSaga);\n    const user = localStorage.getItem(\"user\");\n    if(user){\n        yield fork(watchFetchListWorkAction);\n    }\n    \n    yield takeLatest(workTypes.FILTER_WORKS, filterWorkSaga);\n    yield takeLatest(workTypes.ADD_WORKS,addWorkSaga);\n    yield takeLatest(workTypes.UPDATE_WORKS,updateWorkSaga);\n    yield takeLatest(workTypes.DELETE_WORKS,deleteWorkSaga);\n    yield takeLatest(workTypes.UPDATE_STATUS,updateStatusSaga);\n    \n}\n\n\nexport default rootSaga;\n"]},"metadata":{},"sourceType":"module"}