{"ast":null,"code":"import { fork, take, call, put, delay, takeLatest, select, takeEvery } from \"redux-saga/effects\";\nimport * as workTypes from \"../constansts/work\";\nimport * as userTypes from \"../constansts/user\";\nimport { getList, addWork, updateWork, deleteWork, updateStatus } from '../apis/work';\nimport { showLoading, hideLoading } from '../actions/loading';\n;\nimport { fetchWorksSuccess, fetchWorksFailed, addWorkSuccess, updateWorkSuccess, deleteWorkSuccess, updateStatusSuccess } from '../actions/work';\nimport { toast } from 'react-toastify';\nimport { hideModal } from \"../actions/modal\";\nimport * as workApis from '../apis/work'; // các công việc đã thực hiện\n// bươc 1: xử lý hàm fetch_works\n// bước 2: thực hiện call api\n// bước 3: nếu success thì sẽ trả về data\n// bước 4: chạy hàm fetchWorksSuccess\n// bước 5: thực thi những hàm còn lại\n\nfunction* watchFetchListWorkAction() {\n  yield take(workTypes.FETCH_WORKS);\n  yield put(showLoading());\n  const res = yield call(getList);\n  const {\n    status,\n    data\n  } = res;\n\n  if (status === 200) {\n    yield put(fetchWorksSuccess(data));\n    yield toast.success(\"Lấy dữ liệu thành công\");\n  } else {\n    yield put(fetchWorksFailed(err));\n    yield toast.error(\"lấy dữ liệu thất bại\");\n  }\n\n  yield delay(1000);\n  yield put(hideLoading());\n}\n\nfunction* filterWorkSaga({\n  payload\n}) {\n  const {\n    keyword\n  } = payload;\n  delay(500);\n  const listWorks = yield workApis.getList().then(res => {\n    const {\n      data\n    } = res;\n    return data;\n  });\n  console.log(keyword);\n  console.log(listWorks);\n  const filterWorks = listWorks.filter(work => work.name_work.trim().toLowerCase().includes(keyword.trim().toLowerCase()));\n  console.log(filterWorks);\n  yield put(fetchWorksSuccess(filterWorks));\n}\n\nfunction* addWorkSaga({\n  payload\n}) {\n  const {\n    name_work,\n    description,\n    time,\n    userId,\n    status\n  } = payload.work;\n  yield put(showLoading());\n  const resp = yield call(addWork, {\n    name_work,\n    description,\n    time,\n    userId,\n    status\n  });\n  const {\n    data\n  } = resp;\n\n  if (resp.status === 201) {\n    yield put(addWorkSuccess(data));\n    yield toast.success(\"Thêm thành công\");\n  }\n\n  yield put(hideModal());\n  delay(500);\n  yield put(hideLoading());\n}\n\nfunction* updateWorkSaga({\n  payload\n}) {\n  const {\n    name_work,\n    description,\n    time,\n    userId,\n    status\n  } = payload.work;\n  const workEditing = yield select(state => state.works.workEditing);\n  yield put(showLoading());\n  const resp = yield call(updateWork, {\n    name_work,\n    description,\n    time,\n    userId,\n    status\n  }, workEditing.id);\n  const {\n    data\n  } = resp;\n\n  if (resp.status === 200) {\n    yield put(updateWorkSuccess(data));\n    yield toast.success(\"Sửa thành công\");\n  }\n\n  yield put(hideModal());\n  delay(500);\n  yield put(hideLoading());\n}\n\nfunction* deleteWorkSaga({\n  payload\n}) {\n  const {\n    id\n  } = payload;\n  console.log(id);\n  yield put(showLoading());\n  const res = yield call(deleteWork, id);\n  const {\n    data\n  } = res;\n  yield put(deleteWorkSuccess(data));\n  delay(500);\n  yield put(hideLoading());\n  yield toast.success(\"Xóa thành công\");\n}\n\nfunction* updateStatusSaga({\n  payload\n}) {\n  const {\n    id,\n    status\n  } = payload;\n  console.log(id);\n  yield put(showLoading());\n  const resp = yield call(updateStatus, {\n    status: !status\n  }, id);\n  const {\n    data\n  } = resp;\n\n  if (resp.status === 200) {\n    yield put(updateStatusSuccess(data));\n    yield toast.success(\"Cập nhật trạng thái thành công\");\n  }\n\n  yield put(hideModal());\n  delay(500);\n  yield put(hideLoading());\n}\n\nfunction* signupSaga({\n  payload\n}) {}\n\nfunction* rootSaga() {\n  yield fork(watchFetchListWorkAction);\n  yield takeLatest(workTypes.FILTER_WORKS, filterWorkSaga);\n  yield takeEvery(workTypes.ADD_WORKS, addWorkSaga);\n  yield takeLatest(workTypes.UPDATE_WORKS, updateWorkSaga);\n  yield takeLatest(workTypes.DELETE_WORKS, deleteWorkSaga);\n  yield takeLatest(workTypes.UPDATE_STATUS, updateStatusSaga);\n  yield takeLatest(userTypes.SIGNUP, signupSaga);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["/home/thienncb/Desktop/redux-saga/src/sagas/index.js"],"names":["fork","take","call","put","delay","takeLatest","select","takeEvery","workTypes","userTypes","getList","addWork","updateWork","deleteWork","updateStatus","showLoading","hideLoading","fetchWorksSuccess","fetchWorksFailed","addWorkSuccess","updateWorkSuccess","deleteWorkSuccess","updateStatusSuccess","toast","hideModal","workApis","watchFetchListWorkAction","FETCH_WORKS","res","status","data","success","err","error","filterWorkSaga","payload","keyword","listWorks","then","console","log","filterWorks","filter","work","name_work","trim","toLowerCase","includes","addWorkSaga","description","time","userId","resp","updateWorkSaga","workEditing","state","works","id","deleteWorkSaga","updateStatusSaga","signupSaga","rootSaga","FILTER_WORKS","ADD_WORKS","UPDATE_WORKS","DELETE_WORKS","UPDATE_STATUS","SIGNUP"],"mappings":"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","sourcesContent":["import { fork, take,call,put,delay, takeLatest, select, takeEvery} from \"redux-saga/effects\";\nimport * as workTypes from \"../constansts/work\";\nimport * as userTypes from \"../constansts/user\";\nimport {getList,addWork,updateWork,deleteWork,updateStatus} from '../apis/work';\nimport {showLoading , hideLoading} from '../actions/loading';;\nimport {fetchWorksSuccess, fetchWorksFailed, addWorkSuccess, updateWorkSuccess, deleteWorkSuccess,updateStatusSuccess} from '../actions/work';\nimport { toast } from 'react-toastify';\nimport { hideModal } from \"../actions/modal\";\nimport * as workApis from '../apis/work';\n// các công việc đã thực hiện\n// bươc 1: xử lý hàm fetch_works\n// bước 2: thực hiện call api\n// bước 3: nếu success thì sẽ trả về data\n// bước 4: chạy hàm fetchWorksSuccess\n// bước 5: thực thi những hàm còn lại\nfunction* watchFetchListWorkAction() {\n    yield take(workTypes.FETCH_WORKS);\n    yield put(showLoading());\n    const res = yield call(getList);\n    const {status, data} = res;\n    if(status === 200){\n        yield put(fetchWorksSuccess(data));\n        yield toast.success(\"Lấy dữ liệu thành công\");\n    }else{\n        yield put(fetchWorksFailed(err));\n        yield toast.error(\"lấy dữ liệu thất bại\");\n    }\n    yield delay(1000);\n    yield put(hideLoading());\n }\n function* filterWorkSaga({payload}){\n     const {keyword} = payload;\n     delay(500);\n     const listWorks = yield workApis.getList().then(res => {\n        const {data} = res;\n        return data;\n    });\n     console.log(keyword);\n     console.log(listWorks);\n     const filterWorks = listWorks.filter(\n        work => work.name_work\n        .trim()\n        .toLowerCase()\n        .includes(keyword.trim().toLowerCase())\n\n     );\n    console.log(filterWorks);\n     yield put(fetchWorksSuccess(filterWorks));\n }\n function* addWorkSaga ({payload}){\n    const {name_work,description, time, userId,status} = payload.work;\n    yield put(showLoading());\n    const resp = yield call(addWork,{\n        name_work,\n        description,\n        time,\n        userId,\n        status\n    });\n    const {data} = resp;\n    if(resp.status === 201){\n        yield put(addWorkSuccess(data));\n        yield toast.success(\"Thêm thành công\");\n    }\n    yield put(hideModal());\n    delay(500);\n    yield put(hideLoading());\n\n }\n\n function* updateWorkSaga({payload}){\n    const {name_work,description, time, userId,status} = payload.work;\n    const workEditing = yield select(state=>state.works.workEditing);\n    yield put(showLoading());\n    const resp = yield call(updateWork,{\n        name_work,\n        description,\n        time,\n        userId,\n        status\n    },workEditing.id);\n    const {data} = resp;\n    if(resp.status === 200){\n        yield put(updateWorkSuccess(data));\n        yield toast.success(\"Sửa thành công\");\n    }\n    yield put(hideModal());\n    delay(500);\n    yield put(hideLoading());\n }\n\n function* deleteWorkSaga({payload}){\n    const {id} = payload;\n    console.log(id);\n    yield put(showLoading());\n    const res = yield call(deleteWork,id);\n    const {data} = res;\n    yield put(deleteWorkSuccess(data));\n    delay(500);\n    yield put(hideLoading());\n    yield toast.success(\"Xóa thành công\");\n }\n function* updateStatusSaga({payload}){\n    const {id,status} = payload;\n    console.log(id);\n    yield put(showLoading());\n    \n    const resp = yield call(updateStatus,{\n        status: !status\n    },id);\n    const {data} = resp;\n    if(resp.status === 200){\n        yield put(updateStatusSuccess(data));\n        yield toast.success(\"Cập nhật trạng thái thành công\");\n    }\n    yield put(hideModal());\n    delay(500);\n    yield put(hideLoading());\n }\n\n function* signupSaga({payload}){\n    \n }\nfunction* rootSaga(){\n    yield fork(watchFetchListWorkAction);\n    yield takeLatest(workTypes.FILTER_WORKS, filterWorkSaga);\n    yield takeEvery(workTypes.ADD_WORKS,addWorkSaga);\n    yield takeLatest(workTypes.UPDATE_WORKS,updateWorkSaga);\n    yield takeLatest(workTypes.DELETE_WORKS,deleteWorkSaga);\n    yield takeLatest(workTypes.UPDATE_STATUS,updateStatusSaga);\n    yield takeLatest(userTypes.SIGNUP,signupSaga);\n}\n\n\nexport default rootSaga;\n"]},"metadata":{},"sourceType":"module"}