{"ast":null,"code":"var _jsxFileName = \"/home/thienncb/Desktop/redux-saga/src/containers/Taskboard/index.js\";\nimport { withStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { bindActionCreators } from \"redux\";\nimport * as workActions from \"../../actions/work\";\nimport WorkForm from \"../../components/workform/index\";\nimport WorkItem from \"../../components/workitem/index\";\nimport { STATUSES } from \"../../constansts\";\nimport styles from \"./styles\";\nimport Search from '../../components/search/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass taskBoard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.getData = () => {\n      const {\n        workActionsCreators\n      } = this.props;\n      const {\n        fetchWorksRequest\n      } = workActionsCreators;\n      fetchWorksRequest();\n    };\n\n    this.state = {\n      open: false\n    };\n  } // componentDidMount() {\n  //     const { workActionsCreators } = this.props;\n  //     const { fetchWorksRequest } = workActionsCreators;\n  //     fetchWorksRequest();\n  // }\n\n\n  renderBoard() {\n    const {\n      listWorks\n    } = this.props;\n    var html = null;\n    html = /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: STATUSES.map((status, index) => {\n        if (listWorks) {\n          const workFilter = listWorks.filter(work => work.status === status.value);\n          return /*#__PURE__*/_jsxDEV(WorkItem, {\n            onform: this.handleClickOpen,\n            works: workFilter,\n            status: status,\n            index: index\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n    return html;\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      open\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: classes.m_20,\n        color: \"primary\",\n        onClick: this.getData,\n        children: \"Get Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: classes.m_20,\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        children: [/*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), \"TH\\xCAM C\\xD4NG VI\\u1EC6C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: this.renderBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WorkForm, {\n        open: open,\n        handleClose: this.handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.renderSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listWorks: state.works.listWorks\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    workActionsCreators: bindActionCreators(workActions, dispatch)\n  };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(taskBoard));","map":{"version":3,"sources":["/home/thienncb/Desktop/redux-saga/src/containers/Taskboard/index.js"],"names":["withStyles","Button","Grid","AddIcon","React","Component","connect","bindActionCreators","workActions","WorkForm","WorkItem","STATUSES","styles","Search","taskBoard","constructor","props","handleClickOpen","setState","open","handleClose","getData","workActionsCreators","fetchWorksRequest","state","renderBoard","listWorks","html","map","status","index","workFilter","filter","work","value","render","classes","m_20","root","renderSearch","mapStateToProps","works","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { withStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { bindActionCreators } from \"redux\";\nimport * as workActions from \"../../actions/work\";\nimport WorkForm from \"../../components/workform/index\";\nimport WorkItem from \"../../components/workitem/index\";\nimport { STATUSES } from \"../../constansts\";\nimport styles from \"./styles\";\nimport Search from '../../components/search/index';\nclass taskBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n    }\n    // componentDidMount() {\n    //     const { workActionsCreators } = this.props;\n    //     const { fetchWorksRequest } = workActionsCreators;\n    //     fetchWorksRequest();\n    // }\n    renderBoard() {\n        const { listWorks } = this.props;\n        var html = null;\n        html = (\n            <Grid container spacing={3}>\n                {STATUSES.map((status, index) => {\n                    if (listWorks) {\n                        const workFilter = listWorks.filter(\n                            (work) => work.status === status.value\n                        );\n                        return (\n                            <WorkItem\n                                onform={this.handleClickOpen}\n                                works={workFilter}\n                                status={status}\n                                key={index}\n                                index={index}\n                            />\n                        );\n                    }\n                })}\n            </Grid>\n        );\n        return html;\n    }\n    \n    handleClickOpen = () => {\n        this.setState({\n            open: true,\n        });\n    };\n    handleClose = () => {\n        this.setState({\n            open: false,\n        });\n    };\n    getData = () =>{\n        const { workActionsCreators } = this.props;\n        const { fetchWorksRequest } = workActionsCreators;\n        fetchWorksRequest();\n    }\n    render() {\n        \n        const { classes } = this.props;\n        const { open } = this.state;\n        return (\n            <div>\n                <Button\n                    variant=\"contained\"\n                    className={classes.m_20}\n                    color=\"primary\"\n                    onClick={this.getData}\n                >\n                    Get Data\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.m_20}\n                    color=\"primary\"\n                    onClick={this.handleClickOpen}\n                >\n                    <AddIcon />\n                    THÊM CÔNG VIỆC\n                </Button>\n                <div className={classes.root}>{this.renderBoard}</div>\n                <WorkForm open={open} handleClose={this.handleClose} />\n                <Search/>\n                <div>{this.renderSearch}</div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        listWorks: state.works.listWorks,\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        workActionsCreators: bindActionCreators(workActions, dispatch),\n    };\n};\nexport default withStyles(styles)(\n    connect(mapStateToProps, mapDispatchToProps)(taskBoard)\n);\n"]},"metadata":{},"sourceType":"module"}