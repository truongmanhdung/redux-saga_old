{"ast":null,"code":"import * as workApis from \"../apis/work\";\nimport * as workTypes from \"../constansts/work\";\nexport const fetchWorks = () => {\n  return {\n    type: workTypes.FETCH_WORKS\n  };\n};\nexport const fetchWorksSuccess = data => {\n  return {\n    type: workTypes.FETCH_WORKS_SUCCESS,\n    payload: {\n      data\n    }\n  };\n};\nexport const fetchWorksFailed = err => {\n  return {\n    type: workTypes.FETCH_WORKS_FAILED,\n    payload: {\n      err\n    }\n  };\n}; // b1: fetchWorksRequest() chạy hàm đầu tiên\n// b2: reset works bằng hàm fetchWorks() : works: []\n// b3: dispatch nếu thành công hàm fetchWorksSuccess()\n\nx;\nexport const addWorksRequest = work => {\n  return dispatch => {\n    workApis.addWork(work).then(res => {\n      const {\n        data\n      } = res;\n      dispatch(addWorks(data));\n    }).catch(err => {\n      dispatch(fetchWorksFailed(err));\n    });\n  };\n};\nexport const addWorks = work => {\n  console.log(work);\n  return {\n    type: workTypes.ADD_WORKS,\n    payload: {\n      work\n    }\n  };\n};\nexport const filterWorks = keyword => {\n  return {\n    type: workTypes.FILTER_WORKS,\n    payload: {\n      keyword\n    }\n  };\n};\nexport const filterWorksSuccess = data => {\n  return {\n    type: workTypes.FILTER_WORKS_SUCCESS,\n    payload: {\n      data\n    }\n  };\n};\nexport const filterWorksFailed = err => {\n  return {\n    type: workTypes.FILTER_WORKS_FAILED,\n    payload: {\n      err\n    }\n  };\n};","map":{"version":3,"sources":["/home/thienncb/Desktop/redux-saga/src/actions/work.js"],"names":["workApis","workTypes","fetchWorks","type","FETCH_WORKS","fetchWorksSuccess","data","FETCH_WORKS_SUCCESS","payload","fetchWorksFailed","err","FETCH_WORKS_FAILED","x","addWorksRequest","work","dispatch","addWork","then","res","addWorks","catch","console","log","ADD_WORKS","filterWorks","keyword","FILTER_WORKS","filterWorksSuccess","FILTER_WORKS_SUCCESS","filterWorksFailed","FILTER_WORKS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,cAA1B;AACA,OAAO,KAAKC,SAAZ,MAA2B,oBAA3B;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAEF,SAAS,CAACG;AADb,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMC,iBAAiB,GAAIC,IAAD,IAAU;AACvC,SAAO;AACHH,IAAAA,IAAI,EAAEF,SAAS,CAACM,mBADb;AAEHC,IAAAA,OAAO,EAAE;AACLF,MAAAA;AADK;AAFN,GAAP;AAMH,CAPM;AAQP,OAAO,MAAMG,gBAAgB,GAAIC,GAAD,IAAS;AACrC,SAAO;AACHP,IAAAA,IAAI,EAAEF,SAAS,CAACU,kBADb;AAEHH,IAAAA,OAAO,EAAE;AACLE,MAAAA;AADK;AAFN,GAAP;AAMH,CAPM,C,CASP;AACA;AACA;;AAGAE,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAAU;AACrC,SAAQC,QAAD,IAAc;AACjBf,IAAAA,QAAQ,CACHgB,OADL,CACaF,IADb,EAEKG,IAFL,CAEUC,GAAG,IAAI;AACT,YAAM;AAAEZ,QAAAA;AAAF,UAAWY,GAAjB;AACAH,MAAAA,QAAQ,CAACI,QAAQ,CAACb,IAAD,CAAT,CAAR;AACH,KALL,EAMKc,KANL,CAMWV,GAAG,IAAI;AACVK,MAAAA,QAAQ,CAACN,gBAAgB,CAACC,GAAD,CAAjB,CAAR;AACH,KARL;AASH,GAVD;AAWH,CAZM;AAaP,OAAO,MAAMS,QAAQ,GAAIL,IAAD,IAAU;AAC9BO,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACA,SAAO;AACHX,IAAAA,IAAI,EAAEF,SAAS,CAACsB,SADb;AAEHf,IAAAA,OAAO,EAAE;AACLM,MAAAA;AADK;AAFN,GAAP;AAMH,CARM;AAWP,OAAO,MAAMU,WAAW,GAAGC,OAAO,IAAG;AACjC,SAAO;AACHtB,IAAAA,IAAI,EAAEF,SAAS,CAACyB,YADb;AAEHlB,IAAAA,OAAO,EAAE;AACLiB,MAAAA;AADK;AAFN,GAAP;AAMH,CAPM;AAQP,OAAO,MAAME,kBAAkB,GAAGrB,IAAI,IAAI;AACtC,SAAO;AACHH,IAAAA,IAAI,EAAEF,SAAS,CAAC2B,oBADb;AAEHpB,IAAAA,OAAO,EAAE;AACLF,MAAAA;AADK;AAFN,GAAP;AAMH,CAPM;AASP,OAAO,MAAMuB,iBAAiB,GAAInB,GAAD,IAAS;AACtC,SAAO;AACHP,IAAAA,IAAI,EAAEF,SAAS,CAAC6B,mBADb;AAEHtB,IAAAA,OAAO,EAAE;AACLE,MAAAA;AADK;AAFN,GAAP;AAMH,CAPM","sourcesContent":["import * as workApis from \"../apis/work\";\nimport * as workTypes from \"../constansts/work\";\nexport const fetchWorks = () => {\n    return {\n        type: workTypes.FETCH_WORKS,\n    };\n};\nexport const fetchWorksSuccess = (data) => {\n    return {\n        type: workTypes.FETCH_WORKS_SUCCESS,\n        payload: {\n            data,\n        },\n    };\n};\nexport const fetchWorksFailed = (err) => {\n    return {\n        type: workTypes.FETCH_WORKS_FAILED,\n        payload: {\n            err,\n        },\n    };\n};\n\n// b1: fetchWorksRequest() chạy hàm đầu tiên\n// b2: reset works bằng hàm fetchWorks() : works: []\n// b3: dispatch nếu thành công hàm fetchWorksSuccess()\n\n\nx\n\nexport const addWorksRequest = (work) => {\n    return (dispatch) => {\n        workApis\n            .addWork(work)\n            .then(res => {\n                const { data } = res;\n                dispatch(addWorks(data));\n            })\n            .catch(err => {\n                dispatch(fetchWorksFailed(err));\n            });\n    };\n}\nexport const addWorks = (work) => {\n    console.log(work);\n    return {\n        type: workTypes.ADD_WORKS,\n        payload: {\n            work,\n        },\n    };\n};\n\n\nexport const filterWorks = keyword=> {\n    return {\n        type: workTypes.FILTER_WORKS,\n        payload: {\n            keyword,\n        }\n    };\n};\nexport const filterWorksSuccess = data => {\n    return {\n        type: workTypes.FILTER_WORKS_SUCCESS,\n        payload: {\n            data,\n        }\n    };\n};\n\nexport const filterWorksFailed = (err) => {\n    return {\n        type: workTypes.FILTER_WORKS_FAILED,\n        payload: {\n            err,\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}