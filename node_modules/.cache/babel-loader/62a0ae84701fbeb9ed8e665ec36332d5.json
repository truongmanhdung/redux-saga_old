{"ast":null,"code":"var _jsxFileName = \"/home/thienncb/Desktop/redux-saga/src/containers/Taskboard/index.js\";\nimport { withStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { bindActionCreators } from \"redux\";\nimport * as workActions from \"../../actions/work\";\nimport * as modalActions from \"../../actions/modal\";\nimport WorkForm from \"../../components/workform/index\";\nimport WorkItem from \"../../components/workitem/index\";\nimport { STATUSES } from \"../../constansts\";\nimport styles from \"./styles\";\nimport PropTypes from \"prop-types\";\nimport Search from \"../../components/search/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass taskBoard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      const {\n        modalActionsCreators\n      } = this.props;\n      const {\n        showModal,\n        changeModalContent,\n        changeModalTitle\n      } = modalActionsCreators;\n      showModal();\n      changeModalTitle(\"Thêm mới công việc\");\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleSearch = e => {\n      const {\n        value\n      } = e.target;\n      const {\n        workActionsCreators\n      } = this.props;\n      const {\n        filterWorks\n      } = workActionsCreators;\n      filterWorks(value);\n    };\n\n    this.state = {\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      workActionsCreators\n    } = this.props;\n    const {\n      fetchWorksRequest\n    } = workActionsCreators;\n    fetchWorksRequest();\n  }\n\n  renderBoard() {\n    const {\n      listWorks\n    } = this.props;\n    var html = null;\n    html = /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: STATUSES.map((status, index) => {\n        if (listWorks) {\n          const workFilter = listWorks.filter(work => work.status === status.value);\n          return /*#__PURE__*/_jsxDEV(WorkItem, {\n            onform: this.handleClickOpen,\n            works: workFilter,\n            status: status,\n            index: index\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n    return html;\n  }\n\n  render() {\n    const {\n      classes,\n      showModal\n    } = this.props;\n    const open = showModal;\n    console.log(show);\n    console.log(open);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: classes.m_20,\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        children: [/*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), \"TH\\xCAM C\\xD4NG VI\\u1EC6C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        handleSearch: this.handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: this.renderBoard()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WorkForm, {\n        open: open,\n        handleClose: this.handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\ntaskBoard.propTypes = {\n  classes: PropTypes.object,\n  workActionsCreators: PropTypes.shape({\n    fetchWorksRequest: PropTypes.func,\n    filterWorks: PropTypes.func\n  }),\n  modalActionsCreators: PropTypes.shape({\n    showModal: PropTypes.func,\n    hideModal: PropTypes.func,\n    changeModalContent: PropTypes.func,\n    changeModalTitle: PropTypes.func\n  })\n};\n\nconst mapStateToProps = state => {\n  return {\n    listWorks: state.works.listWorks,\n    showModal: state.showModal\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    workActionsCreators: bindActionCreators(workActions, dispatch),\n    modalActionsCreators: bindActionCreators(modalActions, dispatch)\n  };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(taskBoard));","map":{"version":3,"sources":["/home/thienncb/Desktop/redux-saga/src/containers/Taskboard/index.js"],"names":["withStyles","Button","Grid","AddIcon","React","Component","connect","bindActionCreators","workActions","modalActions","WorkForm","WorkItem","STATUSES","styles","PropTypes","Search","taskBoard","constructor","props","handleClickOpen","modalActionsCreators","showModal","changeModalContent","changeModalTitle","handleClose","setState","open","handleSearch","e","value","target","workActionsCreators","filterWorks","state","componentDidMount","fetchWorksRequest","renderBoard","listWorks","html","map","status","index","workFilter","filter","work","render","classes","console","log","show","m_20","root","propTypes","object","shape","func","hideModal","mapStateToProps","works","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { withStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { bindActionCreators } from \"redux\";\nimport * as workActions from \"../../actions/work\";\nimport * as modalActions from \"../../actions/modal\";\nimport WorkForm from \"../../components/workform/index\";\nimport WorkItem from \"../../components/workitem/index\";\nimport { STATUSES } from \"../../constansts\";\nimport styles from \"./styles\";\nimport PropTypes from \"prop-types\";\nimport Search from \"../../components/search/index\";\nclass taskBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n    }\n    componentDidMount() {\n        const { workActionsCreators } = this.props;\n        const { fetchWorksRequest } = workActionsCreators;\n        fetchWorksRequest();\n    }\n    renderBoard() {\n        const { listWorks } = this.props;\n        var html = null;\n        html = (\n            <Grid container spacing={3}>\n                {STATUSES.map((status, index) => {\n                    if (listWorks) {\n                        const workFilter = listWorks.filter(\n                            (work) => work.status === status.value\n                        );\n                        return (\n                            <WorkItem\n                                onform={this.handleClickOpen}\n                                works={workFilter}\n                                status={status}\n                                key={index}\n                                index={index}\n                            />\n                        );\n                    }\n                })}\n            </Grid>\n        );\n        return html;\n    }\n    handleClickOpen = () => {\n        const { modalActionsCreators } = this.props;\n        const { showModal, changeModalContent, changeModalTitle } =\n        modalActionsCreators;\n        showModal();\n        changeModalTitle(\"Thêm mới công việc\");\n    };\n    handleClose = () => {\n        this.setState({\n            open: false,\n        });\n    };\n    // getData = () =>{\n    //     const { workActionsCreators } = this.props;\n    //     const { fetchWorksRequest } = workActionsCreators;\n    //     fetchWorksRequest();\n    // }\n    handleSearch = (e) => {\n        const { value } = e.target;\n        const { workActionsCreators } = this.props;\n        const { filterWorks } = workActionsCreators;\n        filterWorks(value);\n    };\n\n    render() {\n        const { classes,showModal } = this.props;\n        const  open  = showModal;\n        console.log(show)\n        console.log(open);\n        return (\n            <div>\n                {/* <Button\n                    variant=\"contained\"\n                    className={classes.m_20}\n                    color=\"primary\"\n                    onClick={this.getData}\n                >\n                    Get Data\n                </Button> */}\n                <Button\n                    variant=\"contained\"\n                    className={classes.m_20}\n                    color=\"primary\"\n                    onClick={this.handleClickOpen}\n                >\n                    <AddIcon />\n                    THÊM CÔNG VIỆC\n                </Button>\n                <Search handleSearch={this.handleSearch} />\n                <div className={classes.root}>{this.renderBoard()}</div>\n                <WorkForm open={open} handleClose={this.handleClose} />\n            </div>\n        );\n    }\n}\n\ntaskBoard.propTypes = {\n    classes: PropTypes.object,\n    workActionsCreators: PropTypes.shape({\n        fetchWorksRequest: PropTypes.func,\n        filterWorks: PropTypes.func,\n    }),\n    modalActionsCreators: PropTypes.shape({\n        showModal: PropTypes.func,\n        hideModal: PropTypes.func,\n        changeModalContent: PropTypes.func,\n        changeModalTitle: PropTypes.func,\n    }),\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        listWorks: state.works.listWorks,\n        showModal: state.showModal\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        workActionsCreators: bindActionCreators(workActions, dispatch),\n        modalActionsCreators: bindActionCreators(modalActions, dispatch),\n    };\n};\nexport default withStyles(styles)(\n    connect(mapStateToProps, mapDispatchToProps)(taskBoard)\n);\n"]},"metadata":{},"sourceType":"module"}