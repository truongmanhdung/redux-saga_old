{"ast":null,"code":"import * as workApis from \"../apis/work\";\nimport * as workTypes from \"../constansts/work\";\nexport const fetchWorks = () => {\n  return {\n    type: workTypes.FETCH_WORKS\n  };\n};\nexport const fetchWorksSuccess = data => {\n  return {\n    type: workTypes.FETCH_WORKS_SUCCESS,\n    payload: {\n      data\n    }\n  };\n};\nexport const fetchWorksFailed = err => {\n  return {\n    type: workTypes.FETCH_WORKS_FAILED,\n    payload: {\n      err\n    }\n  };\n}; // b1: fetchWorksRequest() chạy hàm đầu tiên\n// b2: reset works bằng hàm fetchWorks() : works: []\n// b3: dispatch nếu thành công hàm fetchWorksSuccess()\n\nexport const fetchWorksRequest = () => {\n  return dispatch => {\n    dispatch(fetchWorks());\n    workApis.getList().then(res => {\n      const {\n        data\n      } = res;\n      dispatch(fetchWorksSuccess(data));\n    }).catch(err => {\n      dispatch(fetchWorksFailed(err));\n    });\n  };\n};\nexport const addWorks = work => {\n  return {\n    type: workTypes.ADD_WORKS,\n    payload: {\n      work\n    }\n  };\n};\nexport const addWorkSuccess = work => {\n  return {\n    type: workTypes.ADD_WORK_SUCCESS,\n    payload: {\n      work\n    }\n  };\n};\nexport const filterWorks = keyword => {\n  return {\n    type: workTypes.FILTER_WORKS,\n    payload: {\n      keyword\n    }\n  };\n};\nexport const filterWorksSuccess = data => {\n  return {\n    type: workTypes.FILTER_WORKS_SUCCESS,\n    payload: {\n      data\n    }\n  };\n};\nexport const filterWorksFailed = err => {\n  return {\n    type: workTypes.FILTER_WORKS_FAILED,\n    payload: {\n      err\n    }\n  };\n};\nexport const editWorks = work => {\n  return {\n    type: workTypes.EDIT_WORKS,\n    payload: {\n      work\n    }\n  };\n};\nexport const updateWorks = work => {\n  return {\n    type: workTypes.UPDATE_WORKS,\n    payload: {\n      work\n    }\n  };\n};\nexport const updateWorkSuccess = data => {\n  return {\n    type: workTypes.UPDATE_WORK_SUCCESS,\n    payload: {\n      data\n    }\n  };\n};\nexport const deleteWorks = id => {\n  return {\n    type: workTypes.DELETE_WORKS,\n    payload: {\n      id\n    }\n  };\n};\nexport const deleteWorkSuccess = data => {\n  return {\n    type: workTypes.DELETE_WORK_SUCCESS,\n    payload: {\n      data\n    }\n  };\n};\nexport const updateStatus = id => {\n  return {\n    type: workTypes.U,\n    payload: {\n      id\n    }\n  };\n};\nexport const updateStatusSuccess = data => {\n  return {\n    type: workTypes.DELETE_WORK_SUCCESS,\n    payload: {\n      data\n    }\n  };\n};","map":{"version":3,"sources":["/home/thienncb/Desktop/redux-saga/src/actions/work.js"],"names":["workApis","workTypes","fetchWorks","type","FETCH_WORKS","fetchWorksSuccess","data","FETCH_WORKS_SUCCESS","payload","fetchWorksFailed","err","FETCH_WORKS_FAILED","fetchWorksRequest","dispatch","getList","then","res","catch","addWorks","work","ADD_WORKS","addWorkSuccess","ADD_WORK_SUCCESS","filterWorks","keyword","FILTER_WORKS","filterWorksSuccess","FILTER_WORKS_SUCCESS","filterWorksFailed","FILTER_WORKS_FAILED","editWorks","EDIT_WORKS","updateWorks","UPDATE_WORKS","updateWorkSuccess","UPDATE_WORK_SUCCESS","deleteWorks","id","DELETE_WORKS","deleteWorkSuccess","DELETE_WORK_SUCCESS","updateStatus","U","updateStatusSuccess"],"mappings":"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","sourcesContent":["import * as workApis from \"../apis/work\";\nimport * as workTypes from \"../constansts/work\";\nexport const fetchWorks = () => {\n    return {\n        type: workTypes.FETCH_WORKS,\n    };\n};\nexport const fetchWorksSuccess = (data) => {\n    return {\n        type: workTypes.FETCH_WORKS_SUCCESS,\n        payload: {\n            data,\n        },\n    };\n};\nexport const fetchWorksFailed = (err) => {\n    return {\n        type: workTypes.FETCH_WORKS_FAILED,\n        payload: {\n            err,\n        },\n    };\n};\n\n// b1: fetchWorksRequest() chạy hàm đầu tiên\n// b2: reset works bằng hàm fetchWorks() : works: []\n// b3: dispatch nếu thành công hàm fetchWorksSuccess()\n\n\nexport const fetchWorksRequest = () => {\n    return (dispatch) => {\n        dispatch(fetchWorks());\n        workApis\n            .getList()\n            .then(res => {\n                const { data } = res;\n                dispatch(fetchWorksSuccess(data));\n            })\n            .catch(err => {\n                dispatch(fetchWorksFailed(err));\n            });\n    };\n};\n\nexport const addWorks = (work) => {\n    return {\n        type: workTypes.ADD_WORKS,\n        payload: {\n            work,\n        },\n    };\n};\nexport const addWorkSuccess = (work) => {\n    return {\n        type: workTypes.ADD_WORK_SUCCESS,\n        payload: {\n            work,\n        },\n    };\n};\n\n\nexport const filterWorks = keyword=> {\n    return {\n        type: workTypes.FILTER_WORKS,\n        payload: {\n            keyword,\n        }\n    };\n};\nexport const filterWorksSuccess = data => {\n    return {\n        type: workTypes.FILTER_WORKS_SUCCESS,\n        payload: {\n            data,\n        }\n    };\n};\n\nexport const filterWorksFailed = (err) => {\n    return {\n        type: workTypes.FILTER_WORKS_FAILED,\n        payload: {\n            err,\n        }\n    };\n};\n\n\nexport const editWorks = (work) => {\n    return {\n        type: workTypes.EDIT_WORKS,\n        payload: {\n            work,\n        },\n    };\n};\nexport const updateWorks = (work) => {\n    return {\n        type: workTypes.UPDATE_WORKS,\n        payload: {\n            work,\n        },\n    };\n};\nexport const updateWorkSuccess = (data) => {\n    return {\n        type: workTypes.UPDATE_WORK_SUCCESS,\n        payload: {\n            data,\n        },\n    };\n};\nexport const deleteWorks = (id) => {\n    return {\n        type: workTypes.DELETE_WORKS,\n        payload: {\n            id,\n        },\n    };\n};\n\nexport const deleteWorkSuccess = (data) => {\n    return {\n        type: workTypes.DELETE_WORK_SUCCESS,\n        payload: {\n            data,\n        },\n    };\n};\n\nexport const updateStatus = (id) => {\n    return {\n        type: workTypes.U,\n        payload: {\n            id,\n        },\n    };\n};\n\nexport const updateStatusSuccess = (data) => {\n    return {\n        type: workTypes.DELETE_WORK_SUCCESS,\n        payload: {\n            data,\n        },\n    };\n};"]},"metadata":{},"sourceType":"module"}