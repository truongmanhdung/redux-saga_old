{"ast":null,"code":"import axios from \"axios\";\n\nclass AxionsService {\n  constructor() {\n    const instance = axios.create();\n    instance.interceptors.response.use(this.handleSusscess, this.handleError);\n    this.instance = instance;\n  }\n\n  handleSusscess(res) {\n    return res;\n  }\n\n  handleError(err) {\n    return Promise.reject(err);\n  }\n\n  get(url) {\n    return this.instance.get(url);\n  }\n\n  put(url, data) {\n    return this.instance.put(url, data);\n  }\n\n  post(url, data) {\n    return this.instance.post(url, data);\n  }\n\n}\n\nexport default new AxionsService();","map":{"version":3,"sources":["/home/thienncb/Desktop/redux-saga/src/commons/axiosService.js"],"names":["axios","AxionsService","constructor","instance","create","interceptors","response","use","handleSusscess","handleError","res","err","Promise","reject","get","url","put","data","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,CAAoB;AAChBC,EAAAA,WAAW,GAAG;AACV,UAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,EAAjB;AACAD,IAAAA,QAAQ,CAACE,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CAAmC,KAAKC,cAAxC,EAAuD,KAAKC,WAA5D;AACA,SAAKN,QAAL,GAAgBA,QAAhB;AACH;;AACDK,EAAAA,cAAc,CAACE,GAAD,EAAM;AAChB,WAAOA,GAAP;AACH;;AACDD,EAAAA,WAAW,CAACE,GAAD,EAAM;AACb,WAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACH;;AAEDG,EAAAA,GAAG,CAACC,GAAD,EAAM;AACL,WAAO,KAAKZ,QAAL,CAAcW,GAAd,CAAkBC,GAAlB,CAAP;AACH;;AACDC,EAAAA,GAAG,CAACD,GAAD,EAAKE,IAAL,EAAU;AACT,WAAO,KAAKd,QAAL,CAAca,GAAd,CAAkBD,GAAlB,EAAsBE,IAAtB,CAAP;AACH;;AACDC,EAAAA,IAAI,CAACH,GAAD,EAAKE,IAAL,EAAU;AACV,WAAO,KAAKd,QAAL,CAAce,IAAd,CAAmBH,GAAnB,EAAuBE,IAAvB,CAAP;AACH;;AArBe;;AAwBpB,eAAe,IAAIhB,aAAJ,EAAf","sourcesContent":["import axios from \"axios\";\n\nclass AxionsService {\n    constructor() {\n        const instance = axios.create();\n        instance.interceptors.response.use(this.handleSusscess,this.handleError);\n        this.instance = instance;\n    } \n    handleSusscess(res) {\n        return res;\n    }\n    handleError(err) {\n        return Promise.reject(err);\n    }\n\n    get(url) {\n        return this.instance.get(url);\n    }\n    put(url,data){\n        return this.instance.put(url,data);\n    }\n    post(url,data){\n        return this.instance.post(url,data);\n    }\n\n}\nexport default new AxionsService();\n"]},"metadata":{},"sourceType":"module"}